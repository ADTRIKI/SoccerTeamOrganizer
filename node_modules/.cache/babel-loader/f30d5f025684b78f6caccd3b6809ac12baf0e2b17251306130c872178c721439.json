{"ast":null,"code":"var _jsxFileName = \"/Users/adib/Documents/stagetodo/src/Components/FieldWrapper.js\",\n  _s = $RefreshSig$();\n// Components/FieldWrapper.js\nimport React, { useState } from 'react';\nimport { PlayerForm } from './PlayerForm';\nimport { FootballField } from './FootballField';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditPlayerForm } from './EditPlayerForm';\nimport { Player } from './Player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FieldWrapper = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const addPlayer = playerName => {\n    if (players.length < 5) {\n      const newPlayer = {\n        id: uuidv4(),\n        name: playerName,\n        position: generateRandomPosition(players),\n        // Générer une position unique\n        completed: false,\n        isEditing: false\n      };\n      setPlayers([...players, newPlayer]);\n    } else {\n      alert('Maximum 5 players allowed!');\n    }\n  };\n  const generateRandomPosition = existingPlayers => {\n    let position;\n    let overlapping;\n    do {\n      overlapping = false;\n      position = {\n        x: Math.random() * 90 + 5,\n        // Pour éviter les bords\n        y: Math.random() * 80 + 10\n      };\n\n      // Vérifier si la nouvelle position chevauche une position existante\n      for (let player of existingPlayers) {\n        const distance = Math.sqrt(Math.pow(player.position.x - position.x, 2) + Math.pow(player.position.y - position.y, 2));\n        if (distance < 10) {\n          // Minimum distance pour éviter le chevauchement\n          overlapping = true;\n          break;\n        }\n      }\n    } while (overlapping);\n    return position;\n  };\n  const deletePlayer = id => setPlayers(players.filter(player => player.id !== id));\n  const editPlayer = id => {\n    setPlayers(players.map(player => player.id === id ? {\n      ...player,\n      isEditing: !player.isEditing\n    } : player));\n  };\n  const editPlayerName = (name, id) => {\n    setPlayers(players.map(player => player.id === id ? {\n      ...player,\n      name,\n      isEditing: !player.isEditing\n    } : player));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FieldWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Football Team Setup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerForm, {\n      addPlayer: addPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FootballField, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), players.map(player => player.isEditing ? /*#__PURE__*/_jsxDEV(EditPlayerForm, {\n      editPlayer: editPlayerName,\n      player: player\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Player, {\n      player: player,\n      deletePlayer: deletePlayer,\n      editPlayer: editPlayer,\n      toggleComplete: () => {}\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(FieldWrapper, \"hyY7/HJXoJofxtfXykH8Mk/DETg=\");\n_c = FieldWrapper;\nvar _c;\n$RefreshReg$(_c, \"FieldWrapper\");","map":{"version":3,"names":["React","useState","PlayerForm","FootballField","v4","uuidv4","EditPlayerForm","Player","jsxDEV","_jsxDEV","FieldWrapper","_s","players","setPlayers","addPlayer","playerName","length","newPlayer","id","name","position","generateRandomPosition","completed","isEditing","alert","existingPlayers","overlapping","x","Math","random","y","player","distance","sqrt","pow","deletePlayer","filter","editPlayer","map","editPlayerName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleComplete","_c","$RefreshReg$"],"sources":["/Users/adib/Documents/stagetodo/src/Components/FieldWrapper.js"],"sourcesContent":["// Components/FieldWrapper.js\nimport React, { useState } from 'react';\nimport { PlayerForm } from './PlayerForm';\nimport { FootballField } from './FootballField';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditPlayerForm } from './EditPlayerForm';\nimport { Player } from './Player';\n\nexport const FieldWrapper = () => {\n  const [players, setPlayers] = useState([]);\n\n  const addPlayer = (playerName) => {\n    if (players.length < 5) {\n      const newPlayer = {\n        id: uuidv4(),\n        name: playerName,\n        position: generateRandomPosition(players), // Générer une position unique\n        completed: false,\n        isEditing: false,\n      };\n      setPlayers([...players, newPlayer]);\n    } else {\n      alert('Maximum 5 players allowed!');\n    }\n  };\n\n  const generateRandomPosition = (existingPlayers) => {\n    let position;\n    let overlapping;\n    do {\n      overlapping = false;\n      position = {\n        x: Math.random() * 90 + 5, // Pour éviter les bords\n        y: Math.random() * 80 + 10,\n      };\n\n      // Vérifier si la nouvelle position chevauche une position existante\n      for (let player of existingPlayers) {\n        const distance = Math.sqrt(\n          Math.pow(player.position.x - position.x, 2) +\n          Math.pow(player.position.y - position.y, 2)\n        );\n        if (distance < 10) { // Minimum distance pour éviter le chevauchement\n          overlapping = true;\n          break;\n        }\n      }\n    } while (overlapping);\n\n    return position;\n  };\n\n  const deletePlayer = (id) => setPlayers(players.filter((player) => player.id !== id));\n\n  const editPlayer = (id) => {\n    setPlayers(\n      players.map((player) =>\n        player.id === id ? { ...player, isEditing: !player.isEditing } : player\n      )\n    );\n  };\n\n  const editPlayerName = (name, id) => {\n    setPlayers(\n      players.map((player) =>\n        player.id === id ? { ...player, name, isEditing: !player.isEditing } : player\n      )\n    );\n  };\n\n  return (\n    <div className=\"FieldWrapper\">\n      <h1>Football Team Setup</h1>\n      <PlayerForm addPlayer={addPlayer} />\n      {/* Composant FootballField pour afficher les joueurs */}\n      <FootballField players={players} />\n      {/* Composant pour afficher ou éditer les joueurs */}\n      {players.map((player) =>\n        player.isEditing ? (\n          <EditPlayerForm editPlayer={editPlayerName} player={player} key={player.id} />\n        ) : (\n          <Player\n            key={player.id}\n            player={player}\n            deletePlayer={deletePlayer}\n            editPlayer={editPlayer}\n            toggleComplete={() => {}}\n          />\n        )\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}